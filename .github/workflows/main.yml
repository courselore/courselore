on: push
jobs:
  web--build:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
        include:
          - os: windows
            build: npx caxa --input . --output "courselore--windows--${{ github.sha }}.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/build/server/index.mjs"
            artifact: courselore--windows--${{ github.sha }}.exe
          - os: macos
            build: |
              npx caxa --input . --output "courselore" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/build/server/index.mjs"
              tar czf "courselore--macos--${{ github.sha }}.tgz" "courselore"
            artifact: courselore--macos--${{ github.sha }}.tgz
          - os: ubuntu
            build: |
              npx caxa --input . --output "courselore" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/build/server/index.mjs"
              tar czf "courselore--linux--${{ github.sha }}.tgz" "courselore"
            artifact: courselore--linux--${{ github.sha }}.tgz
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - run: |
          cd web
          npm ci
          npx shx rm -rf ./server/node_modules/ ./static/node_modules/
          ${{ matrix.build }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: web/${{ matrix.artifact }}

  web--test:
    strategy:
      matrix:
        os: [windows, macos, ubuntu]
    runs-on: ${{ matrix.os }}-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
      - run: |
          cd web
          npm install-ci-test

  web--deploy--try-courselore-org:
    if: github.ref == 'refs/heads/main'
    needs: [web--build, web--test]
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: |
          cat >> ~/.ssh/known_hosts << "EOF"
          try.courselore.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHYLVf6ryLrV5YEGzIp8+3WuSTpVkVGuUQTojg5LfCcv
          try.courselore.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDCPG61mMjW9lNZBux0UU0jlkr59dl942RQQs8uiMtG1svfDrpAFft54uWWpWU5QOhmxs53lETQkKo12yUysMkXPKq6AcaVM+P+3AZXOAhhPo4yskYUPP+b8BjhGBRT1vbnhJYWl+qZ+rYbI4p5ppxifK7ACFzWpzcvbErFesCakA6Rst+YPUP8y9Gou+5Ll2SEfB1nxDE4AkMgSKhieQ/dIG8vJf0gNskWOMUORNYcLuzaAodL5HKS9pgEg5APZ986SBYYmJ0zBR/UTSrWA9L9B1kLfdbt+yGs/ul3DtGjZJwBDKmgLLy+jIO/4r4HILScKLeEFHyTuwfFuD+YA4NV+mG9daf+v/6TAKvNlJGdzbw40aB576IdJtynLAqZcbxGUyBu8WMixDRhSOYhL5Y1hTn24EPYDzOMYDVXdFgo1vdkx5AU76JJxlIGXDyL/yddXw1fuDDVaGhEw13uHuncToDgIfU2YpCbDu59mcz8Y30ZH1koPnpArwMnImXeI5c=
          try.courselore.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJMLCycmcBGgAjSyi9lFkfNjD5iFovdyEbmN/N0nNWm6qLdZfAb70OUWy8NVfGMuAA55YeZynwXjl3F6nUCfQNw=
          EOF
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: courselore--linux--${{ github.sha }}.tgz
      - run: |
          tar xzf courselore--linux--${{ github.sha }}.tgz

          ssh root@try.courselore.org "mkdir -p courselore"
          rsync -a courselore root@try.courselore.org:courselore/courselore
          rsync -a web/configuration/try.courselore.org.mjs root@try.courselore.org:courselore/configuration.mjs
          rsync -a web/configuration/courselore.service root@try.courselore.org:/etc/systemd/system/courselore.service

          ssh root@try.courselore.org << "EOF"
          systemctl stop courselore
          mv courselore/data/ courselore/data--$(date +"%Y-%m-%d--%H-%M-%S")/ || true
          systemctl daemon-reload
          systemctl restart courselore
          systemctl enable courselore
          EOF

  web--deploy--courselore-org:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [web--build, web--test]
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: |
          cat >> ~/.ssh/known_hosts << "EOF"
          courselore.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAICWWOrbDaoT85jPDWCR5MQHSxdZoJjG3BM0Bvi+4KKzM
          courselore.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDGV4mj3txjlVmqurhAxRZeto4EZpAoemgAd5F/zN6vgZ4Z7Z8bJ7IMBeRi/IXV24dhQjKtOdbMNY8Il7xWG005kk31cGMSW+FdrxZOqRZklnDFn+iwVjKj49gkLcNnGxsq/+N8XJ+I/iOPdTlJAJAdWYOc3lDhae+JoOdslKqBdM9v4WlvpiBfLzZ/3Ci+8+ZnytVnS+lXvROzaKFqKPvcA6g4Euu6ZHaZCxeZ0s8Tg+kQwR1AKht8xxuz0hTL5hKtzBOlwFxf4IQNprSXPzXdktCJzVu3fSdEP8XZPiKjqH9QY3jd4e+inJ/P3AaT7egqEalmkd4Or1JqDTkOpeOrqxPU2zePpLDa1STweh9/4WK/4sptGLrj441exGDxmkGvosLgJSrUQJV0cUGiEhla2FhnDS+006KId0oLYLTlobrjSZh5yn5aQtmDhD10p+Dbl++3PeL5+ieZ2CmIh2e91at6hB5kerB3e7nCQEYT71eRzfa4fZq0JLVsJ8/rsG0=
          courselore.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGwqB/EeHrmeLQLYcbsgwpn6za1kjpmiz3vDSDiGdZ/4gUwyKMDHIlwQc5aofmeEAXG6lvrbnfFnapkmudWTy/g=
          EOF
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: courselore--linux--${{ github.sha }}.tgz
      - run: |
          tar xzf courselore--linux--${{ github.sha }}.tgz

          ssh root@courselore.org "mkdir -p courselore"
          rsync -a courselore root@courselore.org:courselore/courselore
          rsync -a web/configuration/courselore.org.mjs root@courselore.org:courselore/configuration.mjs
          rsync -a web/configuration/courselore.service root@courselore.org:/etc/systemd/system/courselore.service

          ssh root@courselore.org << "EOF"
          systemctl daemon-reload
          systemctl restart courselore
          systemctl enable courselore
          EOF

  web--publish--npm:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: web--test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 19
          registry-url: https://registry.npmjs.org/
      - run: |
          cd web
          npm ci
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  web--publish--release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [web--build, web--test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: courselore--windows--${{ github.sha }}.exe
      - run: mv courselore--windows--${{ github.sha }}.exe courselore--windows--${{ github.ref_name }}.exe
      - uses: actions/download-artifact@v3
        with:
          name: courselore--macos--${{ github.sha }}.tgz
      - run: mv courselore--macos--${{ github.sha }}.tgz courselore--macos--${{ github.ref_name }}.tgz
      - uses: actions/download-artifact@v3
        with:
          name: courselore--linux--${{ github.sha }}.tgz
      - run: mv courselore--linux--${{ github.sha }}.tgz courselore--linux--${{ github.ref_name }}.tgz
      - uses: softprops/action-gh-release@v1
        with:
          files: |
            courselore--windows--${{ github.ref_name }}.exe
            courselore--macos--${{ github.ref_name }}.tgz
            courselore--linux--${{ github.ref_name }}.tgz
