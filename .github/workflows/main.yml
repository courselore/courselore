on: push
jobs:
  web--build:
    strategy:
      matrix:
        os: [
            # windows-latest,
            # macos-latest,
            ubuntu-20.04,
          ]
        include:
          # - os: windows-latest
          #   build: npx caxa --input . --output "courselore--windows--${{ github.sha }}.exe" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/build/index.mjs"
          #   artifact: courselore--windows--${{ github.sha }}.exe
          # - os: macos-latest
          #   build: |
          #     npx caxa --input . --output "courselore" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/build/index.mjs"
          #     tar czf "courselore--macos--${{ github.sha }}.tgz" "courselore"
          #   artifact: courselore--macos--${{ github.sha }}.tgz
          - os: ubuntu-20.04
            build: |
              npx caxa --input . --output "courselore" -- "{{caxa}}/node_modules/.bin/node" "{{caxa}}/build/index.mjs"
              tar czf "courselore--linux--${{ github.sha }}.tgz" "courselore"
            artifact: courselore--linux--${{ github.sha }}.tgz
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: |
          cd web
          npm ci
          ${{ matrix.build }}
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.artifact }}
          path: web/${{ matrix.artifact }}

  web--test:
    strategy:
      matrix:
        os: [
            # windows-latest,
            # macos-latest,
            ubuntu-20.04,
          ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
      - run: |
          cd web
          npm install-ci-test

  web--deploy--try-courselore-org:
    if: github.ref == 'refs/heads/main'
    needs: [web--build, web--test]
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: |
          cat >> ~/.ssh/known_hosts << "EOF"
          try.courselore.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIHYLVf6ryLrV5YEGzIp8+3WuSTpVkVGuUQTojg5LfCcv
          try.courselore.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDCPG61mMjW9lNZBux0UU0jlkr59dl942RQQs8uiMtG1svfDrpAFft54uWWpWU5QOhmxs53lETQkKo12yUysMkXPKq6AcaVM+P+3AZXOAhhPo4yskYUPP+b8BjhGBRT1vbnhJYWl+qZ+rYbI4p5ppxifK7ACFzWpzcvbErFesCakA6Rst+YPUP8y9Gou+5Ll2SEfB1nxDE4AkMgSKhieQ/dIG8vJf0gNskWOMUORNYcLuzaAodL5HKS9pgEg5APZ986SBYYmJ0zBR/UTSrWA9L9B1kLfdbt+yGs/ul3DtGjZJwBDKmgLLy+jIO/4r4HILScKLeEFHyTuwfFuD+YA4NV+mG9daf+v/6TAKvNlJGdzbw40aB576IdJtynLAqZcbxGUyBu8WMixDRhSOYhL5Y1hTn24EPYDzOMYDVXdFgo1vdkx5AU76JJxlIGXDyL/yddXw1fuDDVaGhEw13uHuncToDgIfU2YpCbDu59mcz8Y30ZH1koPnpArwMnImXeI5c=
          try.courselore.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBJMLCycmcBGgAjSyi9lFkfNjD5iFovdyEbmN/N0nNWm6qLdZfAb70OUWy8NVfGMuAA55YeZynwXjl3F6nUCfQNw=
          EOF
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: courselore--linux--${{ github.sha }}.tgz
      - run: |
          tar xzf courselore--linux--${{ github.sha }}.tgz

          ssh root@try.courselore.org "mkdir -p courselore"
          rsync -a courselore root@try.courselore.org:courselore/courselore
          rsync -a web/configuration/try.courselore.org.mjs root@try.courselore.org:courselore/configuration.mjs
          rsync -a web/configuration/courselore.service root@try.courselore.org:/etc/systemd/system/courselore.service

          ssh root@try.courselore.org << "EOF"
          systemctl stop courselore
          mv courselore/data/ courselore/data--$(date +"%Y-%m-%d--%H-%M-%S")/ || true
          systemctl daemon-reload
          systemctl restart courselore
          systemctl enable courselore
          EOF

  web--deploy--courselore-org:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [web--build, web--test]
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - run: |
          cat >> ~/.ssh/known_hosts << "EOF"
          courselore.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBL+HplfvrH+yvoOFV7WeZBUarNo0hxX5yur1VmjB6bPNGGOR1sMBVWlk7KBgvPmIDMHW9VjkbSf0KUJ0TOOFB6Q=
          courselore.org ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCebK3hsOaiDRg6LSCFsOY7QeJueZy7J+aBft1IcYHJEZw+vxxYUoeVbbxK6Kh5AmTRdyp86Z9mXWZYWT1L6jtRAo8kEGlx7FEuqhLAN3DTSj69EiT6vDa/wakz0b5NQkBIqS48dXc4Ob32ONucm1uX+btNNhiwOD5nU5nGa2wQWXb7zuxrVCgUktIUWeLSchw2gp4pQTLKNiVJWJQMOqWwwJ1PNDSqSRyQwLpR78g9EscwTfUEXQu0O1HFzSGpPzMek/6jsnRxW2VOhDE/CLVUqsbI3VsvjJnoWxNbai5f5rBnRNUFevtvQP6eQbRRCzsGlKnvDMk+5nRKJ+SmewzLydhAtYc7M/PmPms7G2+SHsSTpV9VF6E9t3UmCoQ2ruk+twjhlxc62UV210818g96s/m7rHkG0+XtMVcAiPMbVK8zm+d1njnf9wku5jDooV+lV5Ymyc+2GF/fZ0RlBXN/U1mxtv3ySxTYRcrOc0iv7KyBfyc6UGEU15+2CzaXxx8=
          courselore.org ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEE2I9w2iErs1EV4TwI9cb2C653YPon245Zr37fAW1X0
          EOF
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: courselore--linux--${{ github.sha }}.tgz
      - run: |
          tar xzf courselore--linux--${{ github.sha }}.tgz

          ssh root@courselore.org "mkdir -p courselore"
          rsync -a courselore root@courselore.org:courselore/courselore
          rsync -a web/configuration/courselore.org.mjs root@courselore.org:courselore/configuration.mjs
          rsync -a web/configuration/courselore.service root@courselore.org:/etc/systemd/system/courselore.service

          ssh root@courselore.org << "EOF"
          systemctl daemon-reload
          systemctl restart courselore
          systemctl enable courselore
          EOF

  web--publish--npm:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: web--test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20
          registry-url: https://registry.npmjs.org/
      - run: |
          cd web
          npm ci
          npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  web--publish--release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [web--build, web--test]
    runs-on: ubuntu-latest
    steps:
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: courselore--windows--${{ github.sha }}.exe
      # - run: mv courselore--windows--${{ github.sha }}.exe courselore--windows--${{ github.ref_name }}.exe
      # - uses: actions/download-artifact@v3
      #   with:
      #     name: courselore--macos--${{ github.sha }}.tgz
      # - run: mv courselore--macos--${{ github.sha }}.tgz courselore--macos--${{ github.ref_name }}.tgz
      - uses: actions/download-artifact@v3
        with:
          name: courselore--linux--${{ github.sha }}.tgz
      - run: mv courselore--linux--${{ github.sha }}.tgz courselore--linux--${{ github.ref_name }}.tgz
      - uses: softprops/action-gh-release@v1
        with:
          #   courselore--windows--${{ github.ref_name }}.exe
          #   courselore--macos--${{ github.ref_name }}.tgz
          files: |
            courselore--linux--${{ github.ref_name }}.tgz
